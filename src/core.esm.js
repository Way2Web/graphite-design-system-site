{"version":3,"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"names":["patchBrowser","importMeta","import","meta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","globalScripts","bootstrapLazy","name","placeholder","disabled","direction","value","min","max","firstDayOfWeek","isDateDisabled","label","requiredIndicator","helpText","invalidText","invalid","hasHelpTextSlot","hasInvalidTextSlot","hasLabelSlot","setFocus","show","hide","checked","indeterminate","hasFocus","removeFocus","horizontal","buttonTabindex","setButtonTabindex","allowEmptySelection","type","pill","size","clearable","inputmode","readonly","maxlength","spellcheck","step","enterkeyhint","autocapitalize","autocomplete","autocorrect","autofocus","debounce","togglePassword","isPasswordVisible","select","setSelectionRange","setRangeText","panel","active","placement","rows","resize","identifier","role","required","localization","dateAdapter","activeFocus","focusedDay","open","variant","loading","caret","expand","circle","target","rel","multiple","maxTagsVisible","hoist","isOpen","items","displayLabel","displayTags","closeOnSelect","containingElement","distance","skidding","focusOnTrigger","typeToSelect"],"mappings":"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","sourcesContent":["/*\n Stencil Client Patch Browser v2.14.2 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","import { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"]}